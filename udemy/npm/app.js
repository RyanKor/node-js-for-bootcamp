const http = require("http"); //global module, http
const express = require("express");

const app = express();

// app.use((req, res, next) => {
//   console.log("I'am Middleware!");
//   next();
// }); // app.use() => request handler

app.use("/", (req, res, next) => {
  console.log("Another Middleware!");
  res.send("<h1> hello from Express! </h1>");
});
const server = http.createServer(app);

// server.listen(3000); //익스프레스 사용 전
app.listen(3000);

// incoming requests -> my codes -> single JS Thread("fs") -> (start) Event Loop / handle event callback
//                                         -> send to Worker Pool -> different Threads -> ☝️ trigger callback

//결과 값
//localhost:3000으로 접속할 시 return해주는 값들
// `
// IncomingMessage {
//     _readableState: ReadableState {
//       objectMode: false,
//       highWaterMark: 16384,
//       buffer: BufferList { head: null, tail: null, length: 0 },
//       length: 0,
//       pipes: null,
//       pipesCount: 0,
//       flowing: null,
//       ended: false,
//       endEmitted: false,
//       reading: false,
//       sync: true,
//       needReadable: false,
//       emittedReadable: false,
//       readableListening: false,
//       resumeScheduled: false,
//       paused: true,
//       emitClose: true,
//       autoDestroy: false,
//       destroyed: false,
//       defaultEncoding: 'utf8',
//       awaitDrain: 0,
//       readingMore: true,
//       decoder: null,
//       encoding: null
//     },
//     readable: true,
//     _events: [Object: null prototype] {
//       end: [Function: resetHeadersTimeoutOnReqEnd]
//     },
//     _eventsCount: 1,
//     _maxListeners: undefined,
//     socket: Socket {
//       connecting: false,
//       _hadError: false,
//       _parent: null,
//       _host: null,
//       _readableState: ReadableState {
//         objectMode: false,
//         highWaterMark: 16384,
//         buffer: BufferList { head: null, tail: null, length: 0 },
//         length: 0,
//         pipes: null,
//         pipesCount: 0,
//         flowing: true,
//         ended: false,
//         endEmitted: false,
//         reading: true,
//         sync: false,
//         needReadable: true,
//         emittedReadable: false,
//         readableListening: false,
//         resumeScheduled: false,
//         paused: false,
//         emitClose: false,
//         autoDestroy: false,
//         destroyed: false,
//         defaultEncoding: 'utf8',
//         awaitDrain: 0,
//         readingMore: false,
//         decoder: null,
//         encoding: null
//       },
//       readable: true,
//       _events: [Object: null prototype] {
//         end: [Array],
//         timeout: [Function: socketOnTimeout],
//         data: [Function: bound socketOnData],
//         error: [Function: socketOnError],
//         close: [Array],
//         drain: [Function: bound socketOnDrain],
//         resume: [Function: onSocketResume],
//         pause: [Function: onSocketPause]
//       },
//       _eventsCount: 8,
//       _maxListeners: undefined,
//       _writableState: WritableState {
//         objectMode: false,
//         highWaterMark: 16384,
//         finalCalled: false,
//         needDrain: false,
//         ending: false,
//         ended: false,
//         finished: false,
//         destroyed: false,
//         decodeStrings: false,
//         defaultEncoding: 'utf8',
//         length: 0,
//         writing: false,
//         corked: 0,
//         sync: true,
//         bufferProcessing: false,
//         onwrite: [Function: bound onwrite],
//         writecb: null,
//         writelen: 0,
//         bufferedReq: null,
//         lastBufferedReq: null,
//         pendingcb: 0,
//         prefinished: false,
//         errorEmitted: false,
//         emitClose: false,
//         autoDestroy: false,
//         bufferedReqCount: 0,
//         corkedReqsFree: [Object]
//       },
//       writable: true,
//       allowHalfOpen: true,
//       _sockname: null,
//       _pendingData: null,
//       _pendingEncoding: '',
//       server: Server {
//         _events: [Object: null prototype],
//         _eventsCount: 2,
//         _maxListeners: undefined,
//         _connections: 2,
//         _handle: [TCP],
//         _usingWorkers: false,
//         _workers: [],
//         _unref: false,
//         allowHalfOpen: true,
//         pauseOnConnect: false,
//         httpAllowHalfOpen: false,
//         timeout: 120000,
//         keepAliveTimeout: 5000,
//         maxHeadersCount: null,
//         headersTimeout: 40000,
//         _connectionKey: '6::::3000',
//         [Symbol(IncomingMessage)]: [Function: IncomingMessage],
//         [Symbol(ServerRes)]: [Function: ServerRes],
//         [Symbol(asyncId)]: 2
//       },
//       _server: Server {
//         _events: [Object: null prototype],
//         _eventsCount: 2,
//         _maxListeners: undefined,
//         _connections: 2,
//         _handle: [TCP],
//         _usingWorkers: false,
//         _workers: [],
//         _unref: false,
//         allowHalfOpen: true,
//         pauseOnConnect: false,
//         httpAllowHalfOpen: false,
//         timeout: 120000,
//         keepAliveTimeout: 5000,
//         maxHeadersCount: null,
//         headersTimeout: 40000,
//         _connectionKey: '6::::3000',
//         [Symbol(IncomingMessage)]: [Function: IncomingMessage],
//         [Symbol(ServerRes)]: [Function: ServerRes],
//         [Symbol(asyncId)]: 2
//       },
//       timeout: 120000,
//       parser: HTTPParser {
//         '0': [Function: parserOnHeaders],
//         '1': [Function: parserOnHeadersComplete],
//         '2': [Function: parserOnBody],
//         '3': [Function: parserOnMessageComplete],
//         '4': [Function: bound onParserExecute],
//         _headers: [],
//         _url: '',
//         socket: [Circular],
//         incoming: [Circular],
//         outgoing: null,
//         maxHeaderPairs: 2000,
//         _consumed: true,
//         onIncoming: [Function: bound parserOnIncoming],
//         parsingHeadersStart: 0
//       },
//       on: [Function: socketListenerWrap],
//       addListener: [Function: socketListenerWrap],
//       prependListener: [Function: socketListenerWrap],
//       _paused: false,
//       _httpMessage: ServerRes {
//         _events: [Object: null prototype],
//         _eventsCount: 1,
//         _maxListeners: undefined,
//         outputData: [],
//         outputSize: 0,
//         writable: true,
//         _last: false,
//         chunkedEncoding: false,
//         shouldKeepAlive: true,
//         useChunkedEncodingByDefault: true,
//         sendDate: true,
//         _removedConnection: false,
//         _removedContLen: false,
//         _removedTE: false,
//         _contentLength: null,
//         _hasBody: true,
//         _trailer: '',
//         finished: false,
//         _headerSent: false,
//         socket: [Circular],
//         connection: [Circular],
//         _header: null,
//         _onPendingData: [Function: bound updateOutgoingData],
//         _sent100: false,
//         _expect_continue: false,
//         [Symbol(kNeedDrain)]: false,
//         [Symbol(isCorked)]: false,
//         [Symbol(kOutHeaders)]: null
//       },
//       [Symbol(asyncId)]: 4,
//       [Symbol(kHandle)]: TCP {
//         reading: true,
//         onconnection: null,
//         _consumed: true,
//         [Symbol(owner)]: [Circular]
//       },
//       [Symbol(lastWriteQueueSize)]: 0,
//       [Symbol(timeout)]: Timeout {
//         _idleTimeout: 120000,
//         _idlePrev: [Timeout],
//         _idleNext: [TimersList],
//         _idleStart: 30904,
//         _onTimeout: [Function: bound ],
//         _timerArgs: undefined,
//         _repeat: null,
//         _destroyed: false,
//         [Symbol(refed)]: false,
//         [Symbol(asyncId)]: 5,
//         [Symbol(triggerId)]: 4
//       },
//       [Symbol(kBuffer)]: null,
//       [Symbol(kBufferCb)]: null,
//       [Symbol(kBufferGen)]: null,
//       [Symbol(kBytesRead)]: 0,
//       [Symbol(kBytesWritten)]: 0
//     },
//     connection: Socket {
//       connecting: false,
//       _hadError: false,
//       _parent: null,
//       _host: null,
//       _readableState: ReadableState {
//         objectMode: false,
//         highWaterMark: 16384,
//         buffer: BufferList { head: null, tail: null, length: 0 },
//         length: 0,
//         pipes: null,
//         pipesCount: 0,
//         flowing: true,
//         ended: false,
//         endEmitted: false,
//         reading: true,
//         sync: false,
//         needReadable: true,
//         emittedReadable: false,
//         readableListening: false,
//         resumeScheduled: false,
//         paused: false,
//         emitClose: false,
//         autoDestroy: false,
//         destroyed: false,
//         defaultEncoding: 'utf8',
//         awaitDrain: 0,
//         readingMore: false,
//         decoder: null,
//         encoding: null
//       },
//       readable: true,
//       _events: [Object: null prototype] {
//         end: [Array],
//         timeout: [Function: socketOnTimeout],
//         data: [Function: bound socketOnData],
//         error: [Function: socketOnError],
//         close: [Array],
//         drain: [Function: bound socketOnDrain],
//         resume: [Function: onSocketResume],
//         pause: [Function: onSocketPause]
//       },
//       _eventsCount: 8,
//       _maxListeners: undefined,
//       _writableState: WritableState {
//         objectMode: false,
//         highWaterMark: 16384,
//         finalCalled: false,
//         needDrain: false,
//         ending: false,
//         ended: false,
//         finished: false,
//         destroyed: false,
//         decodeStrings: false,
//         defaultEncoding: 'utf8',
//         length: 0,
//         writing: false,
//         corked: 0,
//         sync: true,
//         bufferProcessing: false,
//         onwrite: [Function: bound onwrite],
//         writecb: null,
//         writelen: 0,
//         bufferedReq: null,
//         lastBufferedReq: null,
//         pendingcb: 0,
//         prefinished: false,
//         errorEmitted: false,
//         emitClose: false,
//         autoDestroy: false,
//         bufferedReqCount: 0,
//         corkedReqsFree: [Object]
//       },
//       writable: true,
//       allowHalfOpen: true,
//       _sockname: null,
//       _pendingData: null,
//       _pendingEncoding: '',
//       server: Server {
//         _events: [Object: null prototype],
//         _eventsCount: 2,
//         _maxListeners: undefined,
//         _connections: 2,
//         _handle: [TCP],
//         _usingWorkers: false,
//         _workers: [],
//         _unref: false,
//         allowHalfOpen: true,
//         pauseOnConnect: false,
//         httpAllowHalfOpen: false,
//         timeout: 120000,
//         keepAliveTimeout: 5000,
//         maxHeadersCount: null,
//         headersTimeout: 40000,
//         _connectionKey: '6::::3000',
//         [Symbol(IncomingMessage)]: [Function: IncomingMessage],
//         [Symbol(ServerRes)]: [Function: ServerRes],
//         [Symbol(asyncId)]: 2
//       },
//       _server: Server {
//         _events: [Object: null prototype],
//         _eventsCount: 2,
//         _maxListeners: undefined,
//         _connections: 2,
//         _handle: [TCP],
//         _usingWorkers: false,
//         _workers: [],
//         _unref: false,
//         allowHalfOpen: true,
//         pauseOnConnect: false,
//         httpAllowHalfOpen: false,
//         timeout: 120000,
//         keepAliveTimeout: 5000,
//         maxHeadersCount: null,
//         headersTimeout: 40000,
//         _connectionKey: '6::::3000',
//         [Symbol(IncomingMessage)]: [Function: IncomingMessage],
//         [Symbol(ServerRes)]: [Function: ServerRes],
//         [Symbol(asyncId)]: 2
//       },
//       timeout: 120000,
//       parser: HTTPParser {
//         '0': [Function: parserOnHeaders],
//         '1': [Function: parserOnHeadersComplete],
//         '2': [Function: parserOnBody],
//         '3': [Function: parserOnMessageComplete],
//         '4': [Function: bound onParserExecute],
//         _headers: [],
//         _url: '',
//         socket: [Circular],
//         incoming: [Circular],
//         outgoing: null,
//         maxHeaderPairs: 2000,
//         _consumed: true,
//         onIncoming: [Function: bound parserOnIncoming],
//         parsingHeadersStart: 0
//       },
//       on: [Function: socketListenerWrap],
//       addListener: [Function: socketListenerWrap],
//       prependListener: [Function: socketListenerWrap],
//       _paused: false,
//       _httpMessage: ServerRes {
//         _events: [Object: null prototype],
//         _eventsCount: 1,
//         _maxListeners: undefined,
//         outputData: [],
//         outputSize: 0,
//         writable: true,
//         _last: false,
//         chunkedEncoding: false,
//         shouldKeepAlive: true,
//         useChunkedEncodingByDefault: true,
//         sendDate: true,
//         _removedConnection: false,
//         _removedContLen: false,
//         _removedTE: false,
//         _contentLength: null,
//         _hasBody: true,
//         _trailer: '',
//         finished: false,
//         _headerSent: false,
//         socket: [Circular],
//         connection: [Circular],
//         _header: null,
//         _onPendingData: [Function: bound updateOutgoingData],
//         _sent100: false,
//         _expect_continue: false,
//         [Symbol(kNeedDrain)]: false,
//         [Symbol(isCorked)]: false,
//         [Symbol(kOutHeaders)]: null
//       },
//       [Symbol(asyncId)]: 4,
//       [Symbol(kHandle)]: TCP {
//         reading: true,
//         onconnection: null,
//         _consumed: true,
//         [Symbol(owner)]: [Circular]
//       },
//       [Symbol(lastWriteQueueSize)]: 0,
//       [Symbol(timeout)]: Timeout {
//         _idleTimeout: 120000,
//         _idlePrev: [Timeout],
//         _idleNext: [TimersList],
//         _idleStart: 30904,
//         _onTimeout: [Function: bound ],
//         _timerArgs: undefined,
//         _repeat: null,
//         _destroyed: false,
//         [Symbol(refed)]: false,
//         [Symbol(asyncId)]: 5,
//         [Symbol(triggerId)]: 4
//       },
//       [Symbol(kBuffer)]: null,
//       [Symbol(kBufferCb)]: null,
//       [Symbol(kBufferGen)]: null,
//       [Symbol(kBytesRead)]: 0,
//       [Symbol(kBytesWritten)]: 0
//     },
//     httpVersionMajor: 1,
//     httpVersionMinor: 1,
//     httpVersion: '1.1',
//     complete: false,
//     headers: {
//       host: 'localhost:3000',
//       connection: 'keep-alive',
//       'upgrade-insecure-reqs': '1',
//       'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.106 Safari/537.36',
//       accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
//       'sec-fetch-site': 'none',
//       'sec-fetch-mode': 'navigate',
//       'sec-fetch-user': '?1',
//       'sec-fetch-dest': 'document',
//       'accept-encoding': 'gzip, deflate, br',
//       'accept-language': 'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
//       cookie: '_test_app6_session=%2F2ur%2BaqddKVgrZIAIO8Bt6PdrbhGpW3%2Fq7BoUMSmag%2BBW23pg5vTAqwBfVEnCts%2B%2BCuj%2F%2B%2Bib4sJda0Gf2LMU0%2BrpwRBFOnj36vq2KdjDd1FN5vnDraCiEVhrWLaJL6O0T9Ow%2BqKrEIRdcupTxmYa4dD9pB4WB9u39kfojV%2Ba7lBBSgA9TE3ZFUh3rkuCxMeJttkVy9dFL6OQ6oDIfghj8lwdB7ytOnIXORsMhVrgwIxvqLvNK8XqY3OYwkGg4%2B5ZKKwPf7Ki4Rm14POtJyzV1c9yMckHxYs%2FxY%3D--824PPx366b5bDEeO--tL7RXC0twuoYVMmS7muP7A%3D%3D; _ga=GA1.1.989554287.1587696933'
//     },
//     rawHeaders: [
//       'Host',
//       'localhost:3000',
//       'Connection',
//       'keep-alive',
//       'Upgrade-Insecure-Reqs',
//       '1',
//       'User-Agent',
//       'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.106 Safari/537.36',
//       'Accept',
//       'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
//       'Sec-Fetch-Site',
//       'none',
//       'Sec-Fetch-Mode',
//       'navigate',
//       'Sec-Fetch-User',
//       '?1',
//       'Sec-Fetch-Dest',
//       'document',
//       'Accept-Encoding',
//       'gzip, deflate, br',
//       'Accept-Language',
//       'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
//       'Cookie',
//       '_test_app6_session=%2F2ur%2BaqddKVgrZIAIO8Bt6PdrbhGpW3%2Fq7BoUMSmag%2BBW23pg5vTAqwBfVEnCts%2B%2BCuj%2F%2B%2Bib4sJda0Gf2LMU0%2BrpwRBFOnj36vq2KdjDd1FN5vnDraCiEVhrWLaJL6O0T9Ow%2BqKrEIRdcupTxmYa4dD9pB4WB9u39kfojV%2Ba7lBBSgA9TE3ZFUh3rkuCxMeJttkVy9dFL6OQ6oDIfghj8lwdB7ytOnIXORsMhVrgwIxvqLvNK8XqY3OYwkGg4%2B5ZKKwPf7Ki4Rm14POtJyzV1c9yMckHxYs%2FxY%3D--824PPx366b5bDEeO--tL7RXC0twuoYVMmS7muP7A%3D%3D; _ga=GA1.1.989554287.1587696933'
//     ],
//     trailers: {},
//     rawTrailers: [],
//     aborted: false,
//     upgrade: false,
//     url: '/',
//     method: 'GET',
//     statusCode: null,
//     statusMessage: null,
//     client: Socket {
//       connecting: false,
//       _hadError: false,
//       _parent: null,
//       _host: null,
//       _readableState: ReadableState {
//         objectMode: false,
//         highWaterMark: 16384,
//         buffer: BufferList { head: null, tail: null, length: 0 },
//         length: 0,
//         pipes: null,
//         pipesCount: 0,
//         flowing: true,
//         ended: false,
//         endEmitted: false,
//         reading: true,
//         sync: false,
//         needReadable: true,
//         emittedReadable: false,
//         readableListening: false,
//         resumeScheduled: false,
//         paused: false,
//         emitClose: false,
//         autoDestroy: false,
//         destroyed: false,
//         defaultEncoding: 'utf8',
//         awaitDrain: 0,
//         readingMore: false,
//         decoder: null,
//         encoding: null
//       },
//       readable: true,
//       _events: [Object: null prototype] {
//         end: [Array],
//         timeout: [Function: socketOnTimeout],
//         data: [Function: bound socketOnData],
//         error: [Function: socketOnError],
//         close: [Array],
//         drain: [Function: bound socketOnDrain],
//         resume: [Function: onSocketResume],
//         pause: [Function: onSocketPause]
//       },
//       _eventsCount: 8,
//       _maxListeners: undefined,
//       _writableState: WritableState {
//         objectMode: false,
//         highWaterMark: 16384,
//         finalCalled: false,
//         needDrain: false,
//         ending: false,
//         ended: false,
//         finished: false,
//         destroyed: false,
//         decodeStrings: false,
//         defaultEncoding: 'utf8',
//         length: 0,
//         writing: false,
//         corked: 0,
//         sync: true,
//         bufferProcessing: false,
//         onwrite: [Function: bound onwrite],
//         writecb: null,
//         writelen: 0,
//         bufferedReq: null,
//         lastBufferedReq: null,
//         pendingcb: 0,
//         prefinished: false,
//         errorEmitted: false,
//         emitClose: false,
//         autoDestroy: false,
//         bufferedReqCount: 0,
//         corkedReqsFree: [Object]
//       },
//       writable: true,
//       allowHalfOpen: true,
//       _sockname: null,
//       _pendingData: null,
//       _pendingEncoding: '',
//       server: Server {
//         _events: [Object: null prototype],
//         _eventsCount: 2,
//         _maxListeners: undefined,
//         _connections: 2,
//         _handle: [TCP],
//         _usingWorkers: false,
//         _workers: [],
//         _unref: false,
//         allowHalfOpen: true,
//         pauseOnConnect: false,
//         httpAllowHalfOpen: false,
//         timeout: 120000,
//         keepAliveTimeout: 5000,
//         maxHeadersCount: null,
//         headersTimeout: 40000,
//         _connectionKey: '6::::3000',
//         [Symbol(IncomingMessage)]: [Function: IncomingMessage],
//         [Symbol(ServerRes)]: [Function: ServerRes],
//         [Symbol(asyncId)]: 2
//       },
//       _server: Server {
//         _events: [Object: null prototype],
//         _eventsCount: 2,
//         _maxListeners: undefined,
//         _connections: 2,
//         _handle: [TCP],
//         _usingWorkers: false,
//         _workers: [],
//         _unref: false,
//         allowHalfOpen: true,
//         pauseOnConnect: false,
//         httpAllowHalfOpen: false,
//         timeout: 120000,
//         keepAliveTimeout: 5000,
//         maxHeadersCount: null,
//         headersTimeout: 40000,
//         _connectionKey: '6::::3000',
//         [Symbol(IncomingMessage)]: [Function: IncomingMessage],
//         [Symbol(ServerRes)]: [Function: ServerRes],
//         [Symbol(asyncId)]: 2
//       },
//       timeout: 120000,
//       parser: HTTPParser {
//         '0': [Function: parserOnHeaders],
//         '1': [Function: parserOnHeadersComplete],
//         '2': [Function: parserOnBody],
//         '3': [Function: parserOnMessageComplete],
//         '4': [Function: bound onParserExecute],
//         _headers: [],
//         _url: '',
//         socket: [Circular],
//         incoming: [Circular],
//         outgoing: null,
//         maxHeaderPairs: 2000,
//         _consumed: true,
//         onIncoming: [Function: bound parserOnIncoming],
//         parsingHeadersStart: 0
//       },
//       on: [Function: socketListenerWrap],
//       addListener: [Function: socketListenerWrap],
//       prependListener: [Function: socketListenerWrap],
//       _paused: false,
//       _httpMessage: ServerRes {
//         _events: [Object: null prototype],
//         _eventsCount: 1,
//         _maxListeners: undefined,
//         outputData: [],
//         outputSize: 0,
//         writable: true,
//         _last: false,
//         chunkedEncoding: false,
//         shouldKeepAlive: true,
//         useChunkedEncodingByDefault: true,
//         sendDate: true,
//         _removedConnection: false,
//         _removedContLen: false,
//         _removedTE: false,
//         _contentLength: null,
//         _hasBody: true,
//         _trailer: '',
//         finished: false,
//         _headerSent: false,
//         socket: [Circular],
//         connection: [Circular],
//         _header: null,
//         _onPendingData: [Function: bound updateOutgoingData],
//         _sent100: false,
//         _expect_continue: false,
//         [Symbol(kNeedDrain)]: false,
//         [Symbol(isCorked)]: false,
//         [Symbol(kOutHeaders)]: null
//       },
//       [Symbol(asyncId)]: 4,
//       [Symbol(kHandle)]: TCP {
//         reading: true,
//         onconnection: null,
//         _consumed: true,
//         [Symbol(owner)]: [Circular]
//       },
//       [Symbol(lastWriteQueueSize)]: 0,
//       [Symbol(timeout)]: Timeout {
//         _idleTimeout: 120000,
//         _idlePrev: [Timeout],
//         _idleNext: [TimersList],
//         _idleStart: 30904,
//         _onTimeout: [Function: bound ],
//         _timerArgs: undefined,
//         _repeat: null,
//         _destroyed: false,
//         [Symbol(refed)]: false,
//         [Symbol(asyncId)]: 5,
//         [Symbol(triggerId)]: 4
//       },
//       [Symbol(kBuffer)]: null,
//       [Symbol(kBufferCb)]: null,
//       [Symbol(kBufferGen)]: null,
//       [Symbol(kBytesRead)]: 0,
//       [Symbol(kBytesWritten)]: 0
//     },
//     _consuming: false,
//     _dumped: false
//   }`;
